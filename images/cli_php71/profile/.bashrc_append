
## CUSTOM environment configuration - added into the container by Docker build

# this one comes from the docker-compose env vars, no need to hardcode it here
#export SSH_AUTH_SOCK=/ssh-agent

HISTCONTROL=ignoreboth

alias la='ls -A'
alias ll='ls -lhF'
alias lla='ls -lA'
alias l='ls -CF'


#bash alias for composer to run composer without memory_limit
alias composer='php -d memory_limit=-1 /usr/local/bin/composer'

######################### ez Publish bash functions

alias ez5cacheclear='php ezpublish/console cache:clear'
alias ez5assetsinstall='php ezpublish/console assets:install --relative --symlink web'
alias ez5fosjsdump='php ezpublish/console fos:js-routing:dump'
alias ez5asseticdump='php ezpublish/console assetic:dump'

# smart eZ4 cache clear function
function ez4cacheclear()
{
    local is_ez4_dir=$(test $(ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    local has_ez4_instance_into_web=$(test $(cd web 2>/dev/null;ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    if $is_ez4_dir; then
        echo "Clearing eZ4 cache: php bin/php/ezcache.php $@"
        php bin/php/ezcache.php $@
    elif [ -d ezpublish_legacy ]; then
        echo "Clearing eZ4 legacy cache: php bin/php/ezcache.php $@"
        pushd ezpublish_legacy > /dev/null
        php bin/php/ezcache.php $@
        popd > /dev/null
    elif $has_ez4_instance_into_web; then
        echo "Clearing eZ4 web cache: php bin/php/ezcache.php $@"
        pushd web > /dev/null
        php bin/php/ezcache.php $@
        popd > /dev/null
    else
        echo "No eZ legacy instance found"
    fi
}
alias ez4cacheclearall='ez4cacheclear --clear-all'


# smart eZ4 generate autoloads function
function ez4generateautoloads()
{
    local is_ez4_dir=$(test $(ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    local has_ez4_instance_into_web=$(test $(cd web 2>/dev/null;ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    if $is_ez4_dir; then
        echo "Generating eZ4 autoloads: php bin/php/ezpgenerateautoloads.php $@"
        php bin/php/ezpgenerateautoloads.php $@
    elif [ -d ezpublish_legacy ]; then
        echo "Generating eZ4 legacy autoloads: php bin/php/ezpgenerateautoloads.php $@"
        pushd ezpublish_legacy > /dev/null
        php bin/php/ezpgenerateautoloads.php $@
        popd > /dev/null
    elif $has_ez4_instance_into_web; then
        echo "Generating eZ4 web autoloads: php bin/php/ezpgenerateautoloads.php $@"
        pushd web > /dev/null
        php bin/php/ezpgenerateautoloads.php $@
        popd > /dev/null
    else
        echo "No eZ legacy instance found"
    fi
}
alias ez4generateautoloadsall='ez4generateautoloads -k; ez4generateautoloads -o; ez4generateautoloads -e'

# smart eZ4 xmlinstaller function
function ez4xmlinstaller()
{
    local is_ez4_dir=$(test $(ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    local has_ez4_instance_into_web=$(test $(cd web 2>/dev/null;ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    if $is_ez4_dir; then
        echo "eZ4 xmlinstaller: php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@"
        php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@
    elif [ -d ezpublish_legacy ]; then
        echo "eZ4 legacy xmlinstaller: php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@"
        pushd ezpublish_legacy > /dev/null
        php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@
        popd > /dev/null
    elif $has_ez4_instance_into_web; then
        echo "eZ4 web xmlinstaller: php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@"
        pushd web > /dev/null
        php extension/ezxmlinstaller/bin/php/xmlinstaller.php --template=xmlinstaller/process $@
        popd > /dev/null
    else
        echo "No eZ legacy instance found"
    fi
}

# smart Solr update eZ4 function
function ez4solrupdate()
{
    local nohup_cmd=''
    local nohup_end=''
    if [ "$1" = "nohup" ]; then
        nohup_cmd='nohup'
        nohup_end='&'
        shift
    fi
    local is_ez4_dir=$(test $(ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    local has_ez4_instance_into_web=$(test $(cd web 2>/dev/null;ls -1 -d settings lib kernel bin design extension 2>/dev/null|wc -l) != 6 && echo false || echo true)
    if $is_ez4_dir; then
        echo "Updating eZ4 Solr index: $nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        eval "$nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
    elif [ -d ezpublish_legacy ]; then
        echo "Updating eZ4 legacy Solr index: $nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        pushd ezpublish_legacy > /dev/null
        eval "$nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        popd > /dev/null
    elif $has_ez4_instance_into_web; then
        echo "Updating eZ4 web Solr index: $nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        pushd web > /dev/null
        eval "$nohup_cmd php extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        popd > /dev/null
    else
        echo "No eZ legacy instance found"
    fi
}
alias ez4solrupdatenohup='ez4solrupdate nohup'

# smart Solr update eZ5 function
function ez5solrupdate()
{
    local nohup_cmd=''
    local nohup_end=''
    if [ "$1" = "nohup" ]; then
        nohup_cmd='nohup'
        nohup_end='&'
        shift
    fi
    local is_ez5_dir=$(test $(ls -1 -d ezpublish src vendor web 2>/dev/null|wc -l) != 4 && echo false || echo true)
    if $is_ez5_dir; then
        echo "Updating eZ5 Solr index: $nohup_cmd php ezpublish/console ezpublish:legacy:script extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
        eval "$nohup_cmd php ezpublish/console ezpublish:legacy:script extension/ezfind/bin/php/updatesearchindexsolr.php $@ $nohup_end"
    else
        echo "No eZ5 instance found"
    fi
}
alias ez5solrupdatenohup='ez5solrupdate nohup'


if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

if [ -f ~/.git-prompt.sh ]; then
  . ~/.git-prompt.sh
fi

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

GIT_CONFIGURED=$(git config --list | grep "user.email")
if [ "$GIT_CONFIGURED" = "" ]; then
    echo "Your git profile does not seem to be configured"
    echo "Please enter you user name (i.e. John Doe):"
    read LINE
    git config --global user.name "$LINE"
    echo "Please enter your email:"
    read LINE
    git config --global user.email "$LINE"
fi

PROMPT_U_COLOR='0;1;32m'
GIT_U_COLOR='0;1;36m'

# Custom prompt to display current git branch
PS1='${debian_chroot:+($debian_chroot)}\[\033[${PROMPT_U_COLOR}\]\u\[\033[0;37m\]@\h\[\033[00m\]:\[\033[0;37m\]\[\033[1;33m\]\w\[\033[${GIT_U_COLOR}\]$(__git_ps1)\[\033[00m\]\$ '

# Move to the most commonly used dir :-)
cd /var/www/

if [ -f ~/.bash_append ]; then
    . ~/.bash_append
fi
